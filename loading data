import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
from sklearn.metrics import classification_report
import matplotlib.pyplot as plt

# Load phone usage data
data = pd.read_csv('phone_usage_data.csv')

# Data preprocessing
# For simplicity, let's assume 'target' is a binary label indicating whether phone usage is excessive or not
# You would need to preprocess your dataset accordingly

# Feature selection
features = ['app_usage_hours', 'screen_time_hours', 'device_unlocks_per_day']
X = data[features]
y = data['target']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train a machine learning model (Random Forest Classifier)
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate model performance
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

# Generate classification report
report = classification_report(y_test, y_pred)
print("Classification Report:")
print(report)

# Data analytics: Analyze trends and correlations
# Example: Plotting screen time vs. app usage
plt.scatter(data['screen_time_hours'], data['app_usage_hours'])
plt.xlabel('Screen Time (hours)')
plt.ylabel('App Usage (hours)')
plt.title('Screen Time vs. App Usage')
plt.show()
